#!/bin/bash

# Встановлення gitleaks, якщо не встановлено
if ! command -v gitleaks &> /dev/null
then
    echo "gitleaks не знайдено. Встановлення..."
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        curl -s https://api.github.com/repos/gitleaks/gitleaks/releases/latest | grep "browser_download_url.*linux_amd64.tar.gz" | cut -d : -f 2,3 | tr -d \" | wget -qi -
        tar -xzf gitleaks*.tar.gz
        sudo mv gitleaks /usr/local/bin/
        rm gitleaks*.tar.gz
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        curl -s https://api.github.com/repos/gitleaks/gitleaks/releases/latest | grep "browser_download_url.*darwin_amd64.tar.gz" | cut -d : -f 2,3 | tr -d \" | wget -qi -
        tar -xzf gitleaks*.tar.gz
        sudo mv gitleaks /usr/local/bin/
        rm gitleaks*.tar.gz
    else
        echo "Непідтримувана операційна система."
        exit 1
    fi
    echo "gitleaks успішно встановлено."
fi

# Перевірка чи ввімкнено pre-commit hook
if [[ "$(git config hooks.gitleaks.enable)" != "true" ]]; then
    echo "gitleaks pre-commit hook вимкнено. Для ввімкнення використайте: git config hooks.gitleaks.enable true"
    exit 0
fi

# Запуск gitleaks
echo "Запуск gitleaks..."
gitleaks detect --source .

# Перевірка результату виконання gitleaks
if [[ $? -ne 0 ]]; then
    echo "gitleaks виявив секрети у вашому коді. Коміт відхилено."
    exit 1
else
    echo "gitleaks не виявив секретів. Коміт дозволено."
    exit 0
fi
